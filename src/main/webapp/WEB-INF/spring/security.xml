<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- bCrypt 비밀번호 암호화 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<bean id="authProvider" class="io.github.xeyez.security.CustomAuthenticationProvider">
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>
	
	<bean id="customUserDetailsService" class="io.github.xeyez.security.CustomUserDetailsServiceImpl">
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>
	
	<sec:authentication-manager>
		<sec:authentication-provider ref="authProvider" />
	</sec:authentication-manager>


	<bean id="loginPathValue" class="java.lang.String">
		<constructor-arg value="/user/login" />
	</bean>

	<bean id="customAuthenticationEntryPoint" class="io.github.xeyez.security.handler.CustomAuthenticationEntryPoint">
		<property name="loginPath" ref="loginPathValue" />
	</bean>
	
	<bean id="customAuthenticationSuccessHandler" class="io.github.xeyez.security.handler.CustomAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/board/list" />
	</bean>
	
	<bean id="customAuthenticationFailureHandler" class="io.github.xeyez.security.handler.CustomAuthenticationFailureHandler">
		<property name="loginPath" ref="loginPathValue" />
	</bean>
	
	<bean id="nullRequestCache" class="org.springframework.security.web.savedrequest.NullRequestCache" />
	
	

	<sec:http use-expressions="true" 
		entry-point-ref="customAuthenticationEntryPoint" >
		<sec:request-cache ref="nullRequestCache"/>
	
		<sec:access-denied-handler error-page="/user/accessdenied"/>
	
		<sec:intercept-url pattern="/board/write" access="isAuthenticated()" />
		<sec:intercept-url pattern="/board/modify" access="isAuthenticated()" />
		<sec:intercept-url pattern="/board/remove" access="isAuthenticated()" />
		<sec:intercept-url pattern="/user/profile" access="isAuthenticated()" />
		<sec:intercept-url pattern="/user/withdrawal" access="isAuthenticated()" method="POST" />
		
		<sec:intercept-url pattern="/admin_config" access="hasRole('ADMIN')" />

		<sec:form-login
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler"
			login-processing-url="/user/login_processing"
			
			username-parameter="userid"
			password-parameter="userpw"
		/>
		<sec:logout 
			logout-url="/user/logout"
			logout-success-url="/board/list"
			
			invalidate-session="true"
			delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"
		/>
		
		<sec:remember-me user-service-ref="customUserDetailsService" key="remembermeKey" token-validity-seconds="604800" />
		
		<!--
			invalid-session-url : Session이 끊겼을 때 이동 URL
			expired-url : 중복 로그인 발생시 이동 URL
			session-authentication-error-url : Error 발생시 이동 URL (unauthorized 402)
			session-fixation-protection
				migrateSession : 기존 세션값들을 새로 생성된 세션에 복사. (기본값)
				none - 원래 세션 유지.
				newSession - 기존 셋값들을 복사하지 않은 새 세션 생성. (설정시 Remember me 기능 Error!)
		 -->
		<sec:session-management session-authentication-error-url="/user/login" invalid-session-url="/board/list">
		    <sec:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/user/login" />
		</sec:session-management> 
	</sec:http>
	
</beans>
